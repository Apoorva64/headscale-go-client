---
swagger: "2.0"
info:
  version: "version not set"
  title: "headscale/v1/headscale.proto"
tags:
- name: "HeadscaleService"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /api/v1/apikey:
    get:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ListApiKeys"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ListApiKeysResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "HeadscaleService"
      summary: "--- ApiKeys start ---"
      operationId: "HeadscaleService_CreateApiKey"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1CreateApiKeyRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CreateApiKeyResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/apikey/expire:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ExpireApiKey"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1ExpireApiKeyRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ExpireApiKeyResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/debug/machine:
    post:
      tags:
      - "HeadscaleService"
      summary: "--- Machine start ---"
      operationId: "HeadscaleService_DebugCreateMachine"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1DebugCreateMachineRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DebugCreateMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine:
    get:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ListMachines"
      parameters:
      - name: "user"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ListMachinesResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/register:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_RegisterMachine"
      parameters:
      - name: "user"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      - name: "key"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Key"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RegisterMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/{machineId}:
    get:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_GetMachine"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1GetMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    delete:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_DeleteMachine"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DeleteMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/{machineId}/expire:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ExpireMachine"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ExpireMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/{machineId}/rename/{newName}:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_RenameMachine"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      - name: "newName"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NewName"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RenameMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/{machineId}/routes:
    get:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_GetMachineRoutes"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1GetMachineRoutesResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/{machineId}/tags:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_SetTags"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/body"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1SetTagsResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/machine/{machineId}/user:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_MoveMachine"
      parameters:
      - name: "machineId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "MachineId"
      - name: "user"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1MoveMachineResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/preauthkey:
    get:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ListPreAuthKeys"
      parameters:
      - name: "user"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ListPreAuthKeysResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "HeadscaleService"
      summary: "--- PreAuthKeys start ---"
      operationId: "HeadscaleService_CreatePreAuthKey"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1CreatePreAuthKeyRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CreatePreAuthKeyResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/preauthkey/expire:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ExpirePreAuthKey"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1ExpirePreAuthKeyRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ExpirePreAuthKeyResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/routes:
    get:
      tags:
      - "HeadscaleService"
      summary: "--- Route start ---"
      operationId: "HeadscaleService_GetRoutes"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1GetRoutesResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/routes/{routeId}:
    delete:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_DeleteRoute"
      parameters:
      - name: "routeId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "RouteId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DeleteRouteResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/routes/{routeId}/disable:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_DisableRoute"
      parameters:
      - name: "routeId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "RouteId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DisableRouteResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/routes/{routeId}/enable:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_EnableRoute"
      parameters:
      - name: "routeId"
        in: "path"
        required: true
        type: "string"
        format: "uint64"
        x-exportParamName: "RouteId"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1EnableRouteResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/user:
    get:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_ListUsers"
      parameters: []
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ListUsersResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_CreateUser"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1CreateUserRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CreateUserResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/user/{name}:
    get:
      tags:
      - "HeadscaleService"
      summary: "--- User start ---"
      operationId: "HeadscaleService_GetUser"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1GetUserResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    delete:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_DeleteUser"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DeleteUserResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /api/v1/user/{oldName}/rename/{newName}:
    post:
      tags:
      - "HeadscaleService"
      operationId: "HeadscaleService_RenameUser"
      parameters:
      - name: "oldName"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "OldName"
      - name: "newName"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NewName"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RenameUserResponse"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
definitions:
  protobufAny:
    type: "object"
    properties:
      '@type':
        type: "string"
    additionalProperties: {}
  rpcStatus:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      details:
        type: "array"
        items:
          $ref: "#/definitions/protobufAny"
  v1ApiKey:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uint64"
      prefix:
        type: "string"
      expiration:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
      lastSeen:
        type: "string"
        format: "date-time"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      lastSeen: "2000-01-23T04:56:07.000+00:00"
      prefix: "prefix"
      expiration: "2000-01-23T04:56:07.000+00:00"
      id: "id"
  v1CreateApiKeyRequest:
    type: "object"
    properties:
      expiration:
        type: "string"
        format: "date-time"
  v1CreateApiKeyResponse:
    type: "object"
    properties:
      apiKey:
        type: "string"
    example:
      apiKey: "apiKey"
  v1CreatePreAuthKeyRequest:
    type: "object"
    properties:
      user:
        type: "string"
      reusable:
        type: "boolean"
      ephemeral:
        type: "boolean"
      expiration:
        type: "string"
        format: "date-time"
      aclTags:
        type: "array"
        items:
          type: "string"
  v1CreatePreAuthKeyResponse:
    type: "object"
    properties:
      preAuthKey:
        $ref: "#/definitions/v1PreAuthKey"
    example:
      preAuthKey:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        aclTags:
        - "aclTags"
        - "aclTags"
        ephemeral: true
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        used: true
        user: "user"
        key: "key"
        reusable: true
  v1CreateUserRequest:
    type: "object"
    properties:
      name:
        type: "string"
  v1CreateUserResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/v1User"
    example:
      user:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
  v1DebugCreateMachineRequest:
    type: "object"
    properties:
      user:
        type: "string"
      key:
        type: "string"
      name:
        type: "string"
      routes:
        type: "array"
        items:
          type: "string"
  v1DebugCreateMachineResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1DeleteMachineResponse:
    type: "object"
  v1DeleteRouteResponse:
    type: "object"
  v1DeleteUserResponse:
    type: "object"
  v1DisableRouteResponse:
    type: "object"
  v1EnableRouteResponse:
    type: "object"
  v1ExpireApiKeyRequest:
    type: "object"
    properties:
      prefix:
        type: "string"
  v1ExpireApiKeyResponse:
    type: "object"
  v1ExpireMachineResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1ExpirePreAuthKeyRequest:
    type: "object"
    properties:
      user:
        type: "string"
      key:
        type: "string"
  v1ExpirePreAuthKeyResponse:
    type: "object"
  v1GetMachineResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1GetMachineRoutesResponse:
    type: "object"
    properties:
      routes:
        type: "array"
        items:
          $ref: "#/definitions/v1Route"
    example:
      routes:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        deletedAt: "2000-01-23T04:56:07.000+00:00"
        machine:
          registerMethod: {}
          machineKey: "machineKey"
          discoKey: "discoKey"
          lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
          validTags:
          - "validTags"
          - "validTags"
          givenName: "givenName"
          createdAt: "2000-01-23T04:56:07.000+00:00"
          forcedTags:
          - "forcedTags"
          - "forcedTags"
          lastSeen: "2000-01-23T04:56:07.000+00:00"
          preAuthKey:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            aclTags:
            - "aclTags"
            - "aclTags"
            ephemeral: true
            expiration: "2000-01-23T04:56:07.000+00:00"
            id: "id"
            used: true
            user: "user"
            key: "key"
            reusable: true
          name: "name"
          online: true
          nodeKey: "nodeKey"
          ipAddresses:
          - "ipAddresses"
          - "ipAddresses"
          id: "id"
          expiry: "2000-01-23T04:56:07.000+00:00"
          user:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
          invalidTags:
          - "invalidTags"
          - "invalidTags"
        prefix: "prefix"
        advertised: true
        isPrimary: true
        id: "id"
        enabled: true
        updatedAt: "2000-01-23T04:56:07.000+00:00"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        deletedAt: "2000-01-23T04:56:07.000+00:00"
        machine:
          registerMethod: {}
          machineKey: "machineKey"
          discoKey: "discoKey"
          lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
          validTags:
          - "validTags"
          - "validTags"
          givenName: "givenName"
          createdAt: "2000-01-23T04:56:07.000+00:00"
          forcedTags:
          - "forcedTags"
          - "forcedTags"
          lastSeen: "2000-01-23T04:56:07.000+00:00"
          preAuthKey:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            aclTags:
            - "aclTags"
            - "aclTags"
            ephemeral: true
            expiration: "2000-01-23T04:56:07.000+00:00"
            id: "id"
            used: true
            user: "user"
            key: "key"
            reusable: true
          name: "name"
          online: true
          nodeKey: "nodeKey"
          ipAddresses:
          - "ipAddresses"
          - "ipAddresses"
          id: "id"
          expiry: "2000-01-23T04:56:07.000+00:00"
          user:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
          invalidTags:
          - "invalidTags"
          - "invalidTags"
        prefix: "prefix"
        advertised: true
        isPrimary: true
        id: "id"
        enabled: true
        updatedAt: "2000-01-23T04:56:07.000+00:00"
  v1GetRoutesResponse:
    type: "object"
    properties:
      routes:
        type: "array"
        items:
          $ref: "#/definitions/v1Route"
    example:
      routes:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        deletedAt: "2000-01-23T04:56:07.000+00:00"
        machine:
          registerMethod: {}
          machineKey: "machineKey"
          discoKey: "discoKey"
          lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
          validTags:
          - "validTags"
          - "validTags"
          givenName: "givenName"
          createdAt: "2000-01-23T04:56:07.000+00:00"
          forcedTags:
          - "forcedTags"
          - "forcedTags"
          lastSeen: "2000-01-23T04:56:07.000+00:00"
          preAuthKey:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            aclTags:
            - "aclTags"
            - "aclTags"
            ephemeral: true
            expiration: "2000-01-23T04:56:07.000+00:00"
            id: "id"
            used: true
            user: "user"
            key: "key"
            reusable: true
          name: "name"
          online: true
          nodeKey: "nodeKey"
          ipAddresses:
          - "ipAddresses"
          - "ipAddresses"
          id: "id"
          expiry: "2000-01-23T04:56:07.000+00:00"
          user:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
          invalidTags:
          - "invalidTags"
          - "invalidTags"
        prefix: "prefix"
        advertised: true
        isPrimary: true
        id: "id"
        enabled: true
        updatedAt: "2000-01-23T04:56:07.000+00:00"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        deletedAt: "2000-01-23T04:56:07.000+00:00"
        machine:
          registerMethod: {}
          machineKey: "machineKey"
          discoKey: "discoKey"
          lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
          validTags:
          - "validTags"
          - "validTags"
          givenName: "givenName"
          createdAt: "2000-01-23T04:56:07.000+00:00"
          forcedTags:
          - "forcedTags"
          - "forcedTags"
          lastSeen: "2000-01-23T04:56:07.000+00:00"
          preAuthKey:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            aclTags:
            - "aclTags"
            - "aclTags"
            ephemeral: true
            expiration: "2000-01-23T04:56:07.000+00:00"
            id: "id"
            used: true
            user: "user"
            key: "key"
            reusable: true
          name: "name"
          online: true
          nodeKey: "nodeKey"
          ipAddresses:
          - "ipAddresses"
          - "ipAddresses"
          id: "id"
          expiry: "2000-01-23T04:56:07.000+00:00"
          user:
            createdAt: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
          invalidTags:
          - "invalidTags"
          - "invalidTags"
        prefix: "prefix"
        advertised: true
        isPrimary: true
        id: "id"
        enabled: true
        updatedAt: "2000-01-23T04:56:07.000+00:00"
  v1GetUserResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/v1User"
    example:
      user:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
  v1ListApiKeysResponse:
    type: "object"
    properties:
      apiKeys:
        type: "array"
        items:
          $ref: "#/definitions/v1ApiKey"
    example:
      apiKeys:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        prefix: "prefix"
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        prefix: "prefix"
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
  v1ListMachinesResponse:
    type: "object"
    properties:
      machines:
        type: "array"
        items:
          $ref: "#/definitions/v1Machine"
    example:
      machines:
      - registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
      - registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1ListPreAuthKeysResponse:
    type: "object"
    properties:
      preAuthKeys:
        type: "array"
        items:
          $ref: "#/definitions/v1PreAuthKey"
    example:
      preAuthKeys:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        aclTags:
        - "aclTags"
        - "aclTags"
        ephemeral: true
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        used: true
        user: "user"
        key: "key"
        reusable: true
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        aclTags:
        - "aclTags"
        - "aclTags"
        ephemeral: true
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        used: true
        user: "user"
        key: "key"
        reusable: true
  v1ListUsersResponse:
    type: "object"
    properties:
      users:
        type: "array"
        items:
          $ref: "#/definitions/v1User"
    example:
      users:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
  v1Machine:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uint64"
      machineKey:
        type: "string"
      nodeKey:
        type: "string"
      discoKey:
        type: "string"
      ipAddresses:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
      user:
        $ref: "#/definitions/v1User"
      lastSeen:
        type: "string"
        format: "date-time"
      lastSuccessfulUpdate:
        type: "string"
        format: "date-time"
      expiry:
        type: "string"
        format: "date-time"
      preAuthKey:
        $ref: "#/definitions/v1PreAuthKey"
      createdAt:
        type: "string"
        format: "date-time"
      registerMethod:
        $ref: "#/definitions/v1RegisterMethod"
      forcedTags:
        type: "array"
        items:
          type: "string"
      invalidTags:
        type: "array"
        items:
          type: "string"
      validTags:
        type: "array"
        items:
          type: "string"
      givenName:
        type: "string"
      online:
        type: "boolean"
    example:
      registerMethod: {}
      machineKey: "machineKey"
      discoKey: "discoKey"
      lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
      validTags:
      - "validTags"
      - "validTags"
      givenName: "givenName"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      forcedTags:
      - "forcedTags"
      - "forcedTags"
      lastSeen: "2000-01-23T04:56:07.000+00:00"
      preAuthKey:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        aclTags:
        - "aclTags"
        - "aclTags"
        ephemeral: true
        expiration: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        used: true
        user: "user"
        key: "key"
        reusable: true
      name: "name"
      online: true
      nodeKey: "nodeKey"
      ipAddresses:
      - "ipAddresses"
      - "ipAddresses"
      id: "id"
      expiry: "2000-01-23T04:56:07.000+00:00"
      user:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
      invalidTags:
      - "invalidTags"
      - "invalidTags"
  v1MoveMachineResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1PreAuthKey:
    type: "object"
    properties:
      user:
        type: "string"
      id:
        type: "string"
      key:
        type: "string"
      reusable:
        type: "boolean"
      ephemeral:
        type: "boolean"
      used:
        type: "boolean"
      expiration:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
      aclTags:
        type: "array"
        items:
          type: "string"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      aclTags:
      - "aclTags"
      - "aclTags"
      ephemeral: true
      expiration: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      used: true
      user: "user"
      key: "key"
      reusable: true
  v1RegisterMachineResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1RegisterMethod:
    type: "string"
    enum:
    - "REGISTER_METHOD_UNSPECIFIED"
    - "REGISTER_METHOD_AUTH_KEY"
    - "REGISTER_METHOD_CLI"
    - "REGISTER_METHOD_OIDC"
    default: "REGISTER_METHOD_UNSPECIFIED"
  v1RenameMachineResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1RenameUserResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/v1User"
    example:
      user:
        createdAt: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
  v1Route:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uint64"
      machine:
        $ref: "#/definitions/v1Machine"
      prefix:
        type: "string"
      advertised:
        type: "boolean"
      enabled:
        type: "boolean"
      isPrimary:
        type: "boolean"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      deletedAt:
        type: "string"
        format: "date-time"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      deletedAt: "2000-01-23T04:56:07.000+00:00"
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
      prefix: "prefix"
      advertised: true
      isPrimary: true
      id: "id"
      enabled: true
      updatedAt: "2000-01-23T04:56:07.000+00:00"
  v1SetTagsResponse:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/v1Machine"
    example:
      machine:
        registerMethod: {}
        machineKey: "machineKey"
        discoKey: "discoKey"
        lastSuccessfulUpdate: "2000-01-23T04:56:07.000+00:00"
        validTags:
        - "validTags"
        - "validTags"
        givenName: "givenName"
        createdAt: "2000-01-23T04:56:07.000+00:00"
        forcedTags:
        - "forcedTags"
        - "forcedTags"
        lastSeen: "2000-01-23T04:56:07.000+00:00"
        preAuthKey:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          aclTags:
          - "aclTags"
          - "aclTags"
          ephemeral: true
          expiration: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          used: true
          user: "user"
          key: "key"
          reusable: true
        name: "name"
        online: true
        nodeKey: "nodeKey"
        ipAddresses:
        - "ipAddresses"
        - "ipAddresses"
        id: "id"
        expiry: "2000-01-23T04:56:07.000+00:00"
        user:
          createdAt: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
        invalidTags:
        - "invalidTags"
        - "invalidTags"
  v1User:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
  body:
    type: "object"
    properties:
      tags:
        type: "array"
        items:
          type: "string"
